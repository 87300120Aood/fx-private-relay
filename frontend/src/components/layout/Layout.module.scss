@import "../../styles/tokens.scss";

.wrapper {
  display: flex;
  flex-direction: column;
  height: 100%;

  // See https://fkhadra.github.io/react-toastify/how-to-style#override-css-variables
  --toastify-toast-width: 95%;
  --toastify-color-light: #{$color-white};
  --toastify-color-dark: #{$color-grey-50};
  --toastify-color-info: #{$color-blue-50};
  --toastify-color-success: #{$color-green-50};
  --toastify-color-warning: #{$color-yellow-50};
  --toastify-color-error: #{$color-red-60};

  --toastify-toast-min-height: $layout-md;
  --toastify-toast-max-height: $layout-md;
}

// Allows us to dynamically set the background color based on Toast container state
$toastify-toast-close-button: var(--toast-close-button);

.toast {
  text-align: center;
  font-weight: 400;
  font-size: 13px;
  line-height: 21px;
  border-radius: $border-radius-sm;
  font-family: $font-stack-base;
  padding-top: 0;
  padding-bottom: 0;
  max-width: $content-xl;
  margin: 0 auto;

  &:global {
    &[class*="toast--error"] {
      --toast-close-button: #{$color-red-60};

      &:hover {
        background-color: $color-red-70;
      }

      &:active {
        background-color: $color-red-80;
      }

      &:focus {
        --toast-close-button: #{$color-red-70};
      }

      &:disabled {
        --toast-close-button: #{$color-red-80};
      }

      &:focus,
      &:disabled {
        $toastify-toast-close-button: #{$color-red-80};
      }
    }
  }
}

.close-toast-button-container {
  padding: $spacing-md $spacing-md;
  position: relative;
  right: -8px;
  border-radius: 0 $border-radius-sm $border-radius-sm 0;
  background-color: $toastify-toast-close-button;
}

.close-toast-button-icon {
  width: 20px !important;
  height: 20px !important;
}

.header {
  position: sticky;
  top: 0;
  // The sticky position causes a new stacking context,
  // which is stacked below elements lower in the document
  // with their own stacking contexts (specifically,
  // the floating elements of the hero image when signed out
  // overlap the AppPicker drawer).
  // Thus, upping the z-index stack the header, and menus
  // expanding from it, on top again:
  z-index: 2;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "logoWrapper appPickerWrapper userMenuWrapper"
    "navWrapper navWrapper navWrapper";
  width: 100%;
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.06);

  @media screen and #{$mq-md} {
    grid-template-areas: "logoWrapper navWrapper appPickerWrapper userMenuWrapper";
  }

  .logo-wrapper {
    grid-area: logoWrapper;
    display: flex;
    align-items: center;

    .logo {
      display: inline-flex;
      align-items: center;
      gap: $spacing-sm;
      padding: $spacing-md $spacing-xl;

      .logotype {
        height: 20px;
      }
    }
  }

  .nav-wrapper {
    grid-area: navWrapper;
    display: flex;
    align-items: center;
    padding: $spacing-sm 0;
  }

  .app-picker-wrapper {
    grid-area: appPickerWrapper;
    display: flex;
    align-items: center;
    padding: 0 $spacing-sm;
  }

  .user-menu-wrapper {
    grid-area: userMenuWrapper;
    display: flex;
    align-items: center;
    padding: 0 $spacing-md;
  }

  a:hover {
    color: $color-blue-50;
  }

  &.is-dark {
    background-color: $color-blue-90;
    border-bottom: 1px solid rgba($color-dark-gray-90, 0.5);
    box-shadow: 0 0 3px 0 rgba($color-dark-gray-90, 0.5);
    color: $color-white;

    a:hover {
      color: $color-light-gray-30;
    }
  }
  &.is-light {
    background-color: $color-white;
    color: $color-grey-40;
  }

  @media screen and #{$mq-md} {
    .logo {
      padding: $spacing-md $spacing-xl;
    }
  }
}

.content {
  flex-grow: 2;
  background-color: $color-light-gray-10;
}

.footer {
  background-color: black;
  color: white;
  font-weight: 700;
  display: flex;
  align-items: flex-start;
  flex-direction: column;

  @media screen and #{$mq-md} {
    flex-direction: row;
    align-items: center;
  }

  .mozilla-logo {
    padding: $spacing-xl;
  }

  .meta {
    display: flex;
    flex-direction: column;
    padding: $spacing-lg;
    list-style-type: none;
    gap: $spacing-md;

    @media screen and #{$mq-md} {
      flex-direction: row;
      align-items: center;
      margin-left: auto;
    }

    a {
      padding: $spacing-md;

      img {
        display: inline-block;
      }

      &:hover {
        color: $color-light-gray-40;

        img {
          opacity: 0.8;
        }
      }
    }
  }
}

.api-mock-warning {
  background-color: $color-yellow-10;
  padding: $spacing-md $spacing-lg;
  text-align: center;
}
