@use "../../styles/tokens";
@use "~@mozilla-protocol/core/protocol/css/includes/lib" as mp;

.patch3701 {
  pointer-events: none;
}

.wrapper {
  display: flex;
  flex-direction: column;
  flex: 1 0;

  // See https://fkhadra.github.io/react-toastify/how-to-style#override-css-variables
  --toastify-toast-width: 95%;
  --toastify-color-light: #{mp.$color-white};
  --toastify-color-dark: #{tokens.$color-grey-50};
  --toastify-color-info: #{mp.$color-blue-50};
  --toastify-color-success: #{mp.$color-green-50};
  --toastify-color-warning: #{mp.$color-yellow-50};
  --toastify-color-error: #{mp.$color-red-60};

  --toastify-text-color-info: #{mp.$color-white};
  --toastify-text-color-success: #{tokens.$color-grey-50};
  --toastify-text-color-warning: #{tokens.$color-grey-50};
  --toastify-text-color-error: #{mp.$color-white};

  --toastify-toast-min-height: $layout-md;
  --toastify-toast-max-height: $layout-md;
}

// Allows us to dynamically set the background color based on Toast container state
$toastify-toast-close-button: var(--toast-close-button);

// Targets the toast container and sets max-width to prevent it from obstructing nav items on larger screens.
.toast-container {
  max-width: mp.$content-xl;
}

.toast {
  @include mp.text-body-sm;
  text-align: center;
  font-weight: 400;
  min-height: mp.$layout-md;
  border-radius: mp.$border-radius-sm;
  font-family: mp.$font-stack-base;
  padding: 0;
  max-width: mp.$content-xl;
  margin: 0 auto;

  @media screen and (max-width: mp.$screen-sm) {
    width: calc(100% - mp.$spacing-xl);
    margin-top: mp.$spacing-md;
  }

  &:global {
    &[class*="toast--error"],
    &[class*="toast--info"] {
      [id*="close-toast-button-icon"] {
        color: #{mp.$color-white};
      }
    }

    & > [class*="toast-body"] {
      padding: mp.$spacing-md;
    }

    &[class*="toast--success"],
    &[class*="toast--warning"] {
      [id*="close-toast-button-icon"] {
        color: #{tokens.$color-grey-50};
      }
    }

    &[class*="toast--error"] {
      --toast-close-button: #{mp.$color-red-60};

      &:hover {
        --toastify-color-error: #{mp.$color-red-70};
      }

      &:active,
      &:focus {
        --toastify-color-error: #{mp.$color-red-80};
        --toast-close-button: #{mp.$color-red-80};
      }
    }

    &[class*="toast--info"] {
      --toast-close-button: #{mp.$color-blue-50};

      &:hover {
        --toast-close-button: #{mp.$color-blue-60};
      }

      &:active,
      &:focus {
        --toastify-color-info: #{mp.$color-blue-70};
        --toast-close-button: #{mp.$color-blue-70};
      }
    }

    &[class*="toast--success"] {
      --toast-close-button: #{mp.$color-green-50};

      &:hover {
        --toast-close-button: #{mp.$color-green-60};
      }

      &:active,
      &:focus {
        --toastify-color-success: #{mp.$color-green-70};
        --toast-close-button: #{mp.$color-green-70};
      }
    }

    &[class*="toast--warning"] {
      --toast-close-button: #{mp.$color-yellow-50};

      &:hover {
        --toast-close-button: #{mp.$color-yellow-60};
      }

      &:active,
      &:focus {
        --toastify-color-warning: #{mp.$color-yellow-70};
        --toast-close-button: #{mp.$color-yellow-70};
      }
    }
  }
}

.close-toast-button-container {
  padding: mp.$spacing-md;
  border-radius: 0 mp.$border-radius-sm mp.$border-radius-sm 0;
  background-color: $toastify-toast-close-button;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

#close-toast-button-icon {
  width: 20px;
  height: 20px;
  min-width: 20px;
}

.header-outer {
  position: sticky;
  left: 0;
  top: 0;
  // The sticky position causes a new stacking context,
  // which is stacked below elements lower in the document
  // with their own stacking contexts (specifically,
  // the floating elements of the hero image when signed out
  // overlap the AppPicker drawer).
  // Thus, upping the z-index stack the header, and menus
  // expanding from it, on top again:
  z-index: 1;
}

.header-inner {
  position: relative;
  z-index: 2;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "logoWrapper appPickerWrapper userMenuWrapper"
    "navWrapper navWrapper navWrapper";
  width: 100%;
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.06);

  &.plain-page {
    position: relative;
    box-shadow: none;
  }

  @media screen and #{mp.$mq-md} {
    grid-template-areas: "logoWrapper navWrapper appPickerWrapper userMenuWrapper";
  }

  .logo-wrapper {
    grid-area: logoWrapper;
    display: flex;
    align-items: center;
    max-width: calc(100% - mp.$spacing-md);

    &.plain-page {
      padding-top: mp.$layout-sm;
      justify-content: center;
    }

    .logo {
      display: inline-flex;
      align-items: center;
      gap: mp.$spacing-sm;
      padding: mp.$spacing-md;

      // aligns the logo with the main content @ 1152px,
      // snaps logo in to place essentially
      @media screen and (min-width: mp.$content-xl) {
        padding: mp.$spacing-md mp.$spacing-xl;
      }

      .logotype {
        height: 20px;
      }
    }
  }

  .nav-wrapper {
    display: flex;

    @media screen and #{mp.$mq-md} {
      grid-area: navWrapper;
    }
  }

  .app-picker-wrapper {
    grid-area: appPickerWrapper;
    display: none;
    align-items: center;
    padding: 0 mp.$spacing-sm;

    @media screen and #{mp.$mq-md} {
      display: flex;
    }
  }

  .user-menu-wrapper {
    grid-area: userMenuWrapper;
    display: flex;
    align-items: center;
    padding: 0 mp.$spacing-md;
  }

  a:hover,
  button:hover {
    color: mp.$color-blue-50;
  }

  &.is-dark {
    background-color: mp.$color-blue-90;
    border-bottom: 1px solid rgba(mp.$color-dark-gray-90, 0.5);
    box-shadow: 0 0 3px 0 rgba(mp.$color-dark-gray-90, 0.5);
    color: mp.$color-white;

    a:hover,
    button:hover {
      color: mp.$color-light-gray-30;
    }
  }

  &.is-light {
    background-color: mp.$color-white;
    color: tokens.$color-grey-40;
  }

  &.is-grey {
    background-color: mp.$color-light-gray-10;
  }

  @media screen and #{mp.$mq-md} {
    .logo {
      padding: mp.$spacing-md mp.$spacing-xl;
    }
  }
}

.non-header-wrapper {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.content {
  flex-grow: 2;
  display: flex;
  flex-direction: column;
  // Create a new stacking context for the content, so we can use z-indexes in
  // the content without preventing the header/mobile menu from overlapping it.
  isolation: isolate;
  background-color: mp.$color-light-gray-10;
}

.gray-bg {
  background-color: mp.$color-light-gray-10;
}

.footer {
  background-color: black;
  color: mp.$color-white;

  .links {
    font-weight: 700;
    display: flex;
    align-items: flex-start;
    flex-direction: column;

    @media screen and #{mp.$mq-md} {
      flex-direction: row;
      align-items: center;
    }

    .mozilla-logo {
      padding: mp.$spacing-xl;
    }

    .meta {
      display: flex;
      flex-direction: column;
      padding: mp.$spacing-lg;
      list-style-type: none;
      gap: mp.$spacing-md;

      @media screen and #{mp.$mq-md} {
        flex-direction: row;
        align-items: center;
        margin-left: auto;
      }

      a {
        padding: mp.$spacing-md;

        img {
          display: inline-block;
        }

        &:hover {
          color: mp.$color-light-gray-40;

          img {
            opacity: 0.8;
          }
        }
      }
    }
  }

  .stock-photo-disclaimer {
    display: block;
    padding: mp.$spacing-md;
    text-align: center;
  }
}

.api-mock-warning {
  background-color: mp.$color-yellow-10;
  padding: mp.$spacing-md mp.$spacing-lg;
  text-align: center;
  position: relative;
}
