@use "~@mozilla-protocol/core/protocol/css/includes/lib";
@use "../../../styles/tokens";

.main-phone-wrapper {
  height: 100%;
  display: flex;
  flex-direction: column;

  .content-wrapper {
    max-width: calc(lib.$content-lg + lib.$layout-lg);
    width: 100%;
    height: 100%;
    margin: 0 auto;
    padding: lib.$spacing-md;
    margin-bottom: lib.$layout-md;
    gap: lib.$spacing-lg;
    display: flex;
    flex-direction: column;
    // Ensure that the <Tips> card can always overlap elements in the profile,
    // even if they have z-indexes to overlap each other:
    isolation: isolate;
  }

  .nav-icon {
    color: lib.$color-light-gray-80;
    stroke: lib.$color-light-gray-80;
    stroke-width: 1px;

    &:hover {
      color: tokens.$color-blue-50;
    }
  }

  .dashboard-card-header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    padding: 0 lib.$spacing-xl lib.$spacing-md lib.$spacing-xl;
    border-bottom: 1px solid lib.$color-light-gray-20;
  }

  .senders-cta {
    display: flex;
    flex-direction: row;
    border-radius: lib.$border-radius-lg;
    align-items: center;
    border: 0;
    padding: 0;
    background: transparent;
    cursor: pointer;

    &:hover {
      color: tokens.$color-blue-50;

      .nav-icon {
        color: tokens.$color-blue-50;
        stroke: tokens.$color-blue-50;
      }
    }

    @media screen and #{lib.$mq-md} {
      padding: lib.$spacing-sm;
      gap: lib.$spacing-xs;
      left: lib.$spacing-sm; // Cancel out extra space from padding
      position: relative;

      &:hover {
        background: lib.$color-light-gray-10;
      }
    }

    span {
      display: none;

      @media screen and #{lib.$mq-md} {
        display: block;
      }
    }
  }

  .dashboard-card-caller-sms-senders-header {
    display: flex;
    padding: 0 lib.$spacing-xl lib.$spacing-md lib.$spacing-xl;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    border-bottom: 1px solid lib.$color-light-gray-20;

    > * {
      flex: auto;

      @media screen and #{lib.$mq-md} {
        flex: 1 1 auto;

        span:last-child {
          display: none;
        }
      }
    }

    .caller-sms-logs-title {
      @include lib.text-title-3xs;
      position: relative;
      text-align: center;

      @media screen and #{lib.$mq-md} {
        left: -20px; // Width of the back button
      }
    }

    .caller-sms-logs-back-btn {
      display: flex;
      align-items: center;
      border: 0;
      padding: 0;
      background: transparent;
      cursor: pointer;
    }
  }

  .senders-panel {
    padding: 0 lib.$spacing-lg;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: lib.$spacing-lg;
    min-height: lib.$content-xs;
    margin-top: lib.$spacing-lg;

    .senders-panel-body {
      padding-top: lib.$spacing-sm;
      text-align: center;
      max-width: lib.$content-md;
      margin: 0 auto;
      display: flex;
    }

    .update-settings-cta {
      display: inline-block;
      padding: lib.$spacing-md 0;
      font-weight: 700;
      color: tokens.$color-blue-50;

      &:hover {
        color: tokens.$color-blue-80;
      }
    }

    .warning-icon {
      color: tokens.$color-yellow-50;
      min-width: 20px;
    }
  }

  .caller-sms-senders-table {
    display: flex;
    flex-direction: column;
    margin-top: lib.$spacing-lg;
    padding: 0 lib.$spacing-lg;

    @media screen and #{lib.$mq-md} {
      margin: 0 lib.$spacing-sm;
      margin-top: lib.$spacing-2xl;
    }

    thead {
      // On mobile, the table heading only exists for screen readers.
      // See https://webaim.org/techniques/css/invisiblecontent/#offscreen.
      position: absolute;
      width: 1px;
      height: 1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      clip-path: circle(0);

      @media screen and #{lib.$mq-md} {
        position: unset;
        width: unset;
        height: unset;
        overflow: unset;
        clip: unset;
        clip-path: unset;
      }
    }

    tr {
      display: grid;
      grid-template-columns: 2fr 1fr;
      border-bottom: 1px solid lib.$color-light-gray-20;
      padding: lib.$spacing-sm 0;
      align-items: center;
      gap: lib.$spacing-sm;

      @media screen and #{lib.$mq-md} {
        grid-template-columns: 3fr 2fr 1fr;
        grid-gap: lib.$spacing-md;
      }

      th {
        text-align: start;
        font-weight: 400;
      }

      .sender-number {
        grid-row: 1;
        grid-column: 1;
      }

      .sender-date {
        grid-row: 2;
        grid-column: 1;
      }

      .sender-date-wrapper {
        display: flex;
        align-items: center;
        gap: lib.$spacing-sm;
      }

      .sender-controls {
        grid-row: 1 / 3;
        grid-column: 2;
        align-self: center;
        justify-self: end;
      }

      .forwarded-type-icon {
        color: lib.$color-light-gray-70;
      }

      @media screen and #{lib.$mq-md} {
        .sender-number,
        .sender-date,
        .sender-controls {
          grid-row: auto;
          grid-column: auto;
          justify-self: auto;
        }
      }
    }

    .greyed-contact {
      color: lib.$color-light-gray-80;
    }

    .unblocked {
      color: black;
    }

    .block-btn {
      color: tokens.$color-blue-50;
      border: 0;
      padding: 0;
      background: transparent;
      cursor: pointer;

      &:hover {
        color: tokens.$color-blue-80;
      }
    }
  }

  .dashboard-card {
    box-shadow: lib.$box-shadow-sm;
    background-color: tokens.$color-white;
    border-radius: lib.$border-radius-md;
    display: flex;
    flex-direction: column;
    padding: lib.$spacing-md 0;
    min-height: lib.$content-xs;

    .header-phone-number {
      @include lib.text-body-md;
      @include lib.font-firefox;
      display: flex;
      justify-content: center;
      align-items: center;

      @media screen and #{lib.$mq-sm} {
        @include lib.text-body-xl;
      }

      .copy-controls {
        flex: 1 0 auto;
      }
    }

    .phone-statistics-container {
      margin: lib.$spacing-md lib.$spacing-lg 0 lib.$spacing-lg;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      border-radius: lib.$border-radius-lg;
      border: lib.$border-radius-xs solid lib.$color-light-gray-20;
      gap: lib.$spacing-md;
      padding-top: lib.$spacing-md;

      @media screen and #{lib.$mq-md} {
        flex-direction: row;
        margin: 0 lib.$spacing-lg;
        border-radius: auto;
        border: none;
        gap: none;
      }
    }

    .phone-statistics {
      justify-content: space-between;
      display: flex;
      flex-direction: row-reverse;
      align-items: center;
      padding-left: lib.$spacing-md;
      padding-right: lib.$spacing-md;
      padding-bottom: lib.$spacing-md;
      border-bottom: 1px solid lib.$color-light-gray-20;
      margin: 0;

      &:last-child {
        border-bottom: none;
      }

      @media screen and #{lib.$mq-md} {
        flex: 1;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        text-align: center;
        border-radius: lib.$border-radius-md;
        background: lib.$color-light-gray-10;
        padding: lib.$spacing-md lib.$spacing-lg;
      }

      .phone-statistics-title {
        font-weight: 600;
        border-radius: lib.$border-radius-md;

        @include lib.text-title-3xs;

        @media screen and #{lib.$mq-md} {
          @include lib.text-title-2xs;
          @include lib.font-firefox;
        }
      }

      .phone-statistics-body {
        line-height: 120%;

        @media screen and #{lib.$mq-md} {
          @include lib.text-body-xs;
        }
      }
    }

    .inactive-statistics {
      color: lib.$color-light-gray-70;
    }

    .copy-icon {
      padding: 0 lib.$spacing-sm;
      opacity: 0.5;
      display: inline-block;
      color: lib.$color-light-gray-90;
      align-self: center;
    }

    .copy-button-wrapper {
      display: flex;
      flex-direction: row;
      gap: lib.$spacing-xs;
      align-items: center;
      justify-content: center;
      position: relative;

      .copy-button {
        align-content: center;
        justify-content: center;
        display: flex;
        appearance: none;
        border: 0;
        background-color: transparent;
        text-align: center;
        color: tokens.$color-grey-20;
        cursor: pointer;

        svg {
          width: lib.$layout-sm;
        }

        &:hover {
          color: tokens.$color-grey-30;
        }
      }

      .copied-confirmation {
        @include lib.text-body-sm;
        opacity: 0;
        padding: lib.$spacing-xs lib.$spacing-sm;
        justify-content: center;
        pointer-events: none;
        transition: opacity 2s;
        background-color: tokens.$color-violet-30;
        color: tokens.$color-white;
        border-radius: lib.$border-radius-md;
        right: 0;

        &.is-shown {
          pointer-events: auto;
          opacity: 1;
          // Don't fade in when appearing:
          transition: opacity 0s;
        }
      }
    }

    .phone-controls-container {
      display: flex;
      flex-direction: column;
      margin-top: lib.$spacing-md;
      padding: 0 lib.$spacing-lg lib.$spacing-2xl lib.$spacing-lg;
      width: 100%;
      gap: lib.$spacing-lg;
      border-bottom: 1px solid lib.$color-light-gray-20;

      @media screen and #{lib.$mq-md} {
        flex-direction: row;
        width: auto;
        gap: lib.$layout-xl;
        padding: lib.$spacing-lg lib.$spacing-lg lib.$spacing-2xl
          lib.$spacing-lg;
        border-top: 1px solid lib.$color-light-gray-20;
      }

      .phone-controls {
        $toggle-border-radius: 40px;
        .forwarding-toggle {
          width: lib.$content-sm;
          max-width: 100%;
          background-color: tokens.$color-grey-05;
          border-radius: $toggle-border-radius;
          border: 6px solid tokens.$color-white;
          outline: lib.$border-radius-xs solid tokens.$color-grey-10;
          display: flex;
          align-items: center;
          justify-content: center;
          position: relative;

          // This is the background for the selected state; it's a separate
          // element so we can animate it moving behind the different state
          // labels ("Forwarding" and "Blocking"):
          &::before {
            content: "";
            position: absolute;
            background-color: tokens.$color-violet-70;
            border-radius: $toggle-border-radius;
            width: 50%;
            height: 100%;
            transition: transform 200ms ease-out;
            transform: translateX(-50%);

            @media (prefers-reduced-motion) {
              transition: none;
            }
          }
          &[aria-pressed="false"]::before {
            transform: translateX(50%);
          }

          .forwarding-toggle-state {
            // Make sure the state indicator is visible above the toggle
            // background (i.e. the .forwarding-toggle::before), which is
            // absolutely positioned so it can be animated:
            z-index: 1;
            flex: 1 0 auto;
            padding: lib.$spacing-sm lib.$spacing-sm;
            display: flex;
            gap: lib.$spacing-sm;
            align-items: center;
            justify-content: center;

            @media screen and #{lib.$mq-md} {
              width: lib.$layout-xl;
            }
          }

          &[aria-pressed="true"] .forward-state,
          &[aria-pressed="false"] .block-state {
            color: tokens.$color-white;
          }

          &[aria-pressed="false"] .forward-state,
          &[aria-pressed="true"] .block-state {
            color: tokens.$color-grey-30;
          }

          &:hover {
            cursor: pointer;
            background-color: tokens.$color-violet-05;
            &[aria-pressed="true"] .block-state,
            &[aria-pressed="false"] .forward-state {
              color: tokens.$color-blue-50;
            }
          }
          &:focus-visible {
            outline-color: tokens.$color-blue-50;
          }
        }
      }
    }

    .metadata-container {
      display: flex;
      flex-direction: column;
      gap: lib.$spacing-md;
      padding: 0 lib.$spacing-xl;
      margin-top: lib.$spacing-md;
      border-bottom: 1px solid lib.$color-light-gray-20;

      &:last-child {
        border-bottom-style: none;
        padding-bottom: 0;
      }

      dl {
        flex-grow: 2;
        display: flex;
        gap: lib.$spacing-sm;
        flex-direction: column;

        @media screen and #{lib.$mq-md} {
          flex-direction: row;
          gap: lib.$spacing-xl;
        }

        dt {
          @include lib.text-body-xs;
          color: lib.$color-dark-gray-05;
        }
      }

      @media screen and #{lib.$mq-md} {
        flex-direction: row;

        .metadata {
          $metadataIconSize: 24px;
          background-repeat: no-repeat;
          background-position: left center;
          background-size: $metadataIconSize $metadataIconSize;
          padding-left: calc($metadataIconSize + lib.$spacing-md);
        }

        .forward-target {
          background-image: url("../../../../public/icons/email.svg");
        }

        .date-created {
          background-image: url("../../../../public/icons/calendar.svg");
        }
      }
    }
  }
}
